---
import Layout from "../layouts/Layout.astro";
---

<style>
  /* burger */

  .line.transform-active:nth-child(1) {
    transform: translateY(11px) rotate(45deg);
  }

  .line.transform-active:nth-child(2) {
    opacity: 0;
  }

  .line.transform-active:nth-child(3) {
    transform: translateY(-10px) rotate(-45deg);
  }

  /* rotate */
</style>

<Layout title="Yasin's Portfolio">
  <nav class="justify-between w-full h-fit absolute p-5">
    <div class="container max-w-[1360px] m-auto flex bg-white rounded-lg">
      <div class="flex w-full px-10">
        <div id="logo-home" class="flex items-center w-full h-20">
          <svg width="54" height="42" viewBox="0 0 54 42" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
              d="M38.4978 5.2012C36.8177 10.7215 34.9172 19.3759 40.7565 9.83096C41.2109 9.1254 42.1196 7.28142 42.1196 5.55002C42.1196 3.81861 42.1196 10.6369 42.1196 14.2625C42.0034 11.7098 42.2432 6.39352 44.1326 5.55002L47.7544 3.23514L48.1586 3.79008C47.5034 7.55044 47.1996 15.0204 51.2256 14.8175C55.2516 14.6145 48.1744 15.9749 44.1326 16.6805C37.2721 18.0705 23.1183 21.3546 21.3875 23.3714"
              stroke="black"
              stroke-width="2"></path>
            <path
              d="M26.9015 9.13377C26.2534 7.6685 24.4386 5.61712 22.3645 9.13377C19.7719 13.5296 19.3688 20.3052 23.9058 15.9489C27.5354 12.4638 28.2479 8.56717 28.1504 7.05446H27.4548C26.501 9.92176 25.0551 15.7149 26.9015 15.9489C27.4418 16.0174 28.1622 15.2476 28.9548 14.004M28.9548 14.004C30.8707 10.9974 33.2083 5.22095 34.4421 1.82059C33.4778 3.18835 32.0472 6.24487 34.039 7.52883C36.5288 9.13377 32.249 19.562 28.9548 14.004Z"
              stroke="black"
              stroke-width="2"></path>
            <path
              d="M4.54385 9.73898C6.06883 7.77258 9.5858 3.43594 11.4538 1.82059C9.57788 6.74583 6.47356 16.6596 9.0634 16.913C11.6532 17.1664 18.2846 6.95698 21.2765 1.82059C20.5852 3.34356 19.0333 7.12274 18.3558 10.0557C17.6783 12.9887 14.0368 23.678 12.3007 28.656C10.8311 32.7076 7.09569 40.7268 3.91063 40.3911C0.725574 40.0553 2.22998 34.022 3.38032 31.0474C5.25621 27.0987 11.9999 17.4911 19.9784 16.913"
              stroke="black"
              stroke-width="2"></path>
            <path d="M38.8057 3.92854L39.5823 1.59872" stroke="black" stroke-width="2"></path>
          </svg>
        </div>
        <div id="menus" class="w-full h-20 flex items-center justify-end">
          <div class="my-auto cursor-pointer space-y-2 z-50" id="hamburger">
            <div class="line h-0.5 w-10 bg-teal-900 transition-all duration-300"></div>
            <div class="line h-0.5 w-10 bg-teal-900 transition-all duration-300"></div>
            <div class="line h-0.5 w-10 bg-teal-900 transition-all duration-300"></div>
          </div>
        </div>
      </div>
    </div>
  </nav>

  <section id="hero" class="w-screen h-screen">
    <div class="container h-full m-auto max-w-7xl flex items-end">
      <div class="flex-col w-full h-96 justify-start">
        <div class="flex-col flex gap-3">
          <h1 class="font-bold text-8xl z-20">HI, I'm Yasin <span>âœŒ</span></h1>
          <div class="flex h-[120px] w-full z-10 overflow-hidden">
            <!-- <h1 class="font-bold text-8xl flex gap-5 bg-red-500">I do</h1> -->
            <div class="font-bold text-8xl [text-wrap:balance] bg-clip-text text-black">
              I do <span class="text-black inline-flex flex-col h-[calc(theme(fontSize.8xl)*theme(lineHeight.tight))] md:h-[calc(theme(fontSize.8xl)*theme(lineHeight.tight))] overflow-hidden">
                <ul class="block animate-text-slide-7 text-left leading-tight [&_li]:block">
                  <li>Graphic Design</li>
                  <li>Video Editing</li>
                  <li>Motion Graphic</li>
                  <li>Illustration</li>
                  <li>3D Design</li>
                  <li>UI/UX</li>
                  <li>Frontend</li>
                  <li aria-hidden="true">Graphic Design</li>
                </ul>
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <script>
    //
    function createKeyframes(name, keyframes) {
      const style = document.createElement("style");
      style.innerHTML = `
        @keyframes ${name} {
            ${Object.entries(keyframes)
              .map(
                ([percent, properties]) =>
                  `${percent} { ${Object.entries(properties)
                    .map(([prop, value]) => `${prop}: ${value}`)
                    .join("; ")} }`
              )
              .join(" ")}
        }
    `;
      document.head.appendChild(style);
    }

    // Define keyframes
    const keyframes = {
      "text-slide-2": {
        "0%, 40%": { transform: "translateY(0%)" },
        "50%, 90%": { transform: "translateY(-33.33%)" },
        "100%": { transform: "translateY(-66.66%)" },
      },
      "text-slide-3": {
        "0%, 26.66%": { transform: "translateY(0%)" },
        "33.33%, 60%": { transform: "translateY(-25%)" },
        "66.66%, 93.33%": { transform: "translateY(-50%)" },
        "100%": { transform: "translateY(-75%)" },
      },
      "text-slide-4": {
        "0%, 20%": { transform: "translateY(0%)" },
        "25%, 45%": { transform: "translateY(-20%)" },
        "50%, 70%": { transform: "translateY(-40%)" },
        "75%, 95%": { transform: "translateY(-60%)" },
        "100%": { transform: "translateY(-80%)" },
      },
      "text-slide-5": {
        "0%, 16%": { transform: "translateY(0%)" },
        "20%, 36%": { transform: "translateY(-16.66%)" },
        "40%, 56%": { transform: "translateY(-33.33%)" },
        "60%, 76%": { transform: "translateY(-50%)" },
        "80%, 96%": { transform: "translateY(-66.66%)" },
        "100%": { transform: "translateY(-83.33%)" },
      },
      "text-slide-6": {
        "0%, 13.33%": { transform: "translateY(0%)" },
        "16.66%, 30%": { transform: "translateY(-14.28%)" },
        "33.33%, 46.66%": { transform: "translateY(-28.57%)" },
        "50%, 63.33%": { transform: "translateY(-42.85%)" },
        "66.66%, 80%": { transform: "translateY(-57.14%)" },
        "83.33%, 96.66%": { transform: "translateY(-71.42%)" },
        "100%": { transform: "translateY(-85.71%)" },
      },
      "text-slide-7": {
        "0%, 11.43%": { transform: "translateY(0%)" },
        "14.28%, 25.71%": { transform: "translateY(-12.5%)" },
        "28.57%, 40%": { transform: "translateY(-25%)" },
        "42.85%, 54.28%": { transform: "translateY(-37.5%)" },
        "57.14%, 68.57%": { transform: "translateY(-50%)" },
        "71.42%, 82.85%": { transform: "translateY(-62.5%)" },
        "85.71%, 97.14%": { transform: "translateY(-75%)" },
        "100%": { transform: "translateY(-87.5%)" },
      },
      "text-slide-8": {
        "0%, 10%": { transform: "translateY(0%)" },
        "12.5%, 22.5%": { transform: "translateY(-11.11%)" },
        "25%, 35%": { transform: "translateY(-22.22%)" },
        "37.5%, 47.5%": { transform: "translateY(-33.33%)" },
        "50%, 60%": { transform: "translateY(-44.44%)" },
        "62.5%, 72.5%": { transform: "translateY(-55.55%)" },
        "75%, 85%": { transform: "translateY(-66.66%)" },
        "87.5%, 97.5%": { transform: "translateY(-77.77%)" },
        "100%": { transform: "translateY(-88.88%)" },
      },
    };

    // Create keyframes
    for (const [name, frames] of Object.entries(keyframes)) {
      createKeyframes(name, frames);
    }

    function applyAnimation(element, name, duration, timingFunction, iterationCount) {
      element.style.animation = `${name} ${duration} ${timingFunction} ${iterationCount}`;
    }

    // Example usage:
    // Apply 'text-slide-2' animation to an element with id 'animated-text'
    const element = document.getElementById("animated-text");
    applyAnimation(element, "text-slide-2", "5s", "cubic-bezier(0.83, 0, 0.17, 1)", "infinite");
  </script>
</Layout>
