---
import Layout from "../layouts/Layout.astro";
---

<style>
  *:not(img):not(nav):not(svg):not(h3):not(#info):not(h3 span):not(a):not(button):not(span):not(.anim-underline-fx):not(li):not(.line) {
    opacity: 0;
    transform: translateY(20px);
    transition:
      opacity 0.7s,
      transform 0.7s;
  }

  *:not(img):not(nav):not(svg):not(h3):not(#info):not(h3 span):not(a):not(button):not(span):not(.anim-underline-fx):not(li):not(.line).animate {
    opacity: 1;
    transform: translateY(0);
  }
  body {
    height: 2000px; /* Add some height to the page to make scrolling possible */
    overflow-y: scroll; /* Enable scrolling */
  }
  .anim-underline-fx {
    color: #242424;
    text-decoration: none;
    background-image: linear-gradient(to right, #242424 50%, #e5e7eb 10%);
    background-size: 200% 3px;
    background-repeat: no-repeat;
    background-position: 100% 100%;
    transition: background-position 0.3s;
  }

  .anim-underline-fx:hover {
    background-position: 0% 100%;
  }
  .wave {
    animation-name: wave-animation; /* Refers to the name of your @keyframes element below */
    animation-duration: 2.5s; /* Change to speed up or slow down */
    animation-iteration-count: infinite; /* Never stop waving :) */
    transform-origin: 70% 70%; /* Pivot around the bottom-left palm */
    display: inline-block;
  }

  @keyframes wave-animation {
    0% {
      transform: rotate(0deg);
    }
    10% {
      transform: rotate(14deg);
    } /* The following five values can be played with to make the waving more or less extreme */
    20% {
      transform: rotate(-8deg);
    }
    30% {
      transform: rotate(14deg);
    }
    40% {
      transform: rotate(-4deg);
    }
    50% {
      transform: rotate(10deg);
    }
    60% {
      transform: rotate(0deg);
    } /* Reset for the last half to pause */
    100% {
      transform: rotate(0deg);
    }
  }
  body {
    height: 10000px;
    background-attachment: fixed;
  }

  h1 {
    color: #242424;
    display: block;
  }

  .wrapper {
    position: relative;
  }

  .container {
    margin: 0 auto;
    position: relative;

    .text {
      display: flex;

      p {
        margin: 0;
      }

      span {
        color: #242424;
        transition: opacity 0.25s linear;

        &:last-child {
          border-bottom: 2px solid #fff;
        }
      }
    }
  }

  /* burger */

  .line.transform-active:nth-child(1) {
    transform: translateY(2px) rotate(45deg);
  }

  .line.transform-active:nth-child(2) {
    transform: translateY(-8px) rotate(-45deg);
  }
</style>

<Layout title="Yasin's Portfolio">
  <div class="relative h-[5000px]">
    <div class="sticky top-0">
      <nav class="w-full h-fit translate-y-5">
        <div class="container max-w-[1360px] m-auto flex rounded-lg">
          <div class="flex w-full max-w-7xl m-auto">
            <div id="logo-home" class="flex items-center w-full h-20">
              <a href="home">
                <svg width="54" height="42" viewBox="0 0 54 42" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M38.4978 5.2012C36.8177 10.7215 34.9172 19.3759 40.7565 9.83096C41.2109 9.1254 42.1196 7.28142 42.1196 5.55002C42.1196 3.81861 42.1196 10.6369 42.1196 14.2625C42.0034 11.7098 42.2432 6.39352 44.1326 5.55002L47.7544 3.23514L48.1586 3.79008C47.5034 7.55044 47.1996 15.0204 51.2256 14.8175C55.2516 14.6145 48.1744 15.9749 44.1326 16.6805C37.2721 18.0705 23.1183 21.3546 21.3875 23.3714"
                    stroke="#242424"
                    stroke-width="2"></path>
                  <path
                    d="M26.9015 9.13377C26.2534 7.6685 24.4386 5.61712 22.3645 9.13377C19.7719 13.5296 19.3688 20.3052 23.9058 15.9489C27.5354 12.4638 28.2479 8.56717 28.1504 7.05446H27.4548C26.501 9.92176 25.0551 15.7149 26.9015 15.9489C27.4418 16.0174 28.1622 15.2476 28.9548 14.004M28.9548 14.004C30.8707 10.9974 33.2083 5.22095 34.4421 1.82059C33.4778 3.18835 32.0472 6.24487 34.039 7.52883C36.5288 9.13377 32.249 19.562 28.9548 14.004Z"
                    stroke="#242424"
                    stroke-width="2"></path>
                  <path
                    d="M4.54385 9.73898C6.06883 7.77258 9.5858 3.43594 11.4538 1.82059C9.57788 6.74583 6.47356 16.6596 9.0634 16.913C11.6532 17.1664 18.2846 6.95698 21.2765 1.82059C20.5852 3.34356 19.0333 7.12274 18.3558 10.0557C17.6783 12.9887 14.0368 23.678 12.3007 28.656C10.8311 32.7076 7.09569 40.7268 3.91063 40.3911C0.725574 40.0553 2.22998 34.022 3.38032 31.0474C5.25621 27.0987 11.9999 17.4911 19.9784 16.913"
                    stroke="#242424"
                    stroke-width="2"></path>
                  <path d="M38.8057 3.92854L39.5823 1.59872" stroke="#242424" stroke-width="2"></path>
                </svg>
              </a>
            </div>
            <div id="menus" class="w-full h-20 flex items-center justify-end">
              <div class="my-auto cursor-pointer space-y-2 z-50" id="hamburger">
                <div class="line h-0.5 w-10 bg-primary transition-all duration-300"></div>
                <div class="line h-0.5 w-10 bg-primary transition-all duration-300"></div>
              </div>
            </div>
          </div>
        </div>
      </nav>

      <section id="hero" class="h-[calc(100vh-18rem)] pb-2">
        <div class="container h-full w-full mx-auto max-w-7xl flex flex-col justify-end items-start leading-none">
          <div class="flex-col w-full">
            <div class="flex-col flex gap-0 lg:gap-1">
              <h1 class="font-bold text-4xl md:text-5xl lg:text-8xl z-10">HI, I'm Yasin <span class="wave">✌️</span></h1>
              <div class="flex h-[45px] md:h-[60px] lg:h-[120px] w-full z-0 overflow-hidden">
                <!-- <h1 class="font-bold text-8xl flex gap-5 bg-red-500">I do</h1> -->
                <div id="rotatetext" class="font-bold text-4xl md:text-5xl lg:text-8xl [text-wrap:balance] bg-clip-text text-primary">
                  I like to <span class="text-primary inline-flex flex-col h-[calc(theme(fontSize.8xl)*theme(lineHeight.tight))] md:h-[calc(theme(fontSize.8xl)*theme(lineHeight.tight))] overflow-hidden">
                    <ul class="block animate-text-slide-4 text-left leading-tight [&_li]:block">
                      <li>Move Pixels</li>
                      <li>Code</li>
                      <li>Edit</li>
                      <li>Draw</li>
                      <li aria-hidden="true">Move Pixels</li>
                    </ul>
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
      <section class="text-revealing pb-64">
        <div class="text-lg md:text-2xl lg:text-[40px] font-bold">
          <div id="reveal">
            <div class="container relative mx-auto px-[3px] max-w-7xl">
              <div class="text">
                <p class="flex flex-wrap gap-1 lg:gap-2 leading-none">
                  <span style="opacity: 0.1">I</span>
                  <span style="opacity: 0.1">create</span>
                  <span style="opacity: 0.1">compelling</span>
                  <span style="opacity: 0.1">designs</span>
                  <span style="opacity: 0.1">across</span>
                  <span style="opacity: 0.1">UI,</span>
                  <span style="opacity: 0.1">video,</span>
                  <span style="opacity: 0.1">motion,</span>
                  <span style="opacity: 0.1">3D,</span>
                  <span style="opacity: 0.1">and</span>
                  <span style="opacity: 0.1">illustration,</span>
                  <span style="opacity: 0.1">blending</span>
                  <span style="opacity: 0.1">aesthetic</span>
                  <span style="opacity: 0.1">appeal</span>
                  <span style="opacity: 0.1">with</span>
                  <span style="opacity: 0.1">practical</span>
                  <span style="opacity: 0.1">functionality.</span>
                </p>
              </div>
            </div>
          </div>
        </div>
      </section>

      <section id="service" class="pb-20">
        <div class="mx-auto container max-w-7xl flex flex-col w-full h-96 gap-14">
          <div id="upper1">
            <h2 class="font-bold text-6xl text-primary py-2">Services</h2>
          </div>
          <div id="bottom1">
            <div class="grid grid-cols-3 text-3xl gap-3">
              <p class="px-2 py-4 anim-underline-fx">UI/UX</p>
              <p class="px-2 py-4 anim-underline-fx">3D Design</p>
              <p class="px-2 py-4 anim-underline-fx">Motion & Illustration</p>
              <p class="px-2 py-4 anim-underline-fx">Video Editing</p>
              <p class="px-2 py-4 anim-underline-fx">Graphic Design</p>
              <p class="px-2 py-4 anim-underline-fx">Frontend</p>
            </div>
          </div>
        </div>
      </section>

      <section id="works" class="pb-96">
        <div class="mx-auto container max-w-7xl flex flex-col w-full h-96 gap-14">
          <div id="upper2">
            <h2 class="font-bold text-6xl text-primary py-2">Featured Works</h2>
          </div>
          <div id="bottom2">
            <div class="w-full h-fit gap-8 flex flex-col">
              <div class="gap-3 justify-center flex">
                <img
                  class="bg-blue-50 w-full h-[500px] border-none rounded-md flex basis-1/4 hover:basis-2/4 transition-all duration-300 object-cover overflow-hidden saturate-100 opacity-75 hover:opacity-100 contrast-125 hover:contrast-100 hover:saturate-100"
                  src="https://images.unsplash.com/photo-1638937480132-ebdc0219a4af?q=80&w=1964&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                  alt=""
                />
                <img
                  class="bg-blue-50 w-full h-[500px] border-none rounded-md flex basis-1/4 hover:basis-2/4 transition-all duration-300 object-cover overflow-hidden saturate-100 opacity-75 hover:opacity-100 contrast-125 hover:contrast-100 hover:saturate-100"
                  src="
               https://images.unsplash.com/photo-1642059893618-22daf30e92a2?q=80&w=1966&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                  alt=""
                />
                <img
                  class="bg-blue-50 w-full h-[500px] border-none rounded-md flex basis-1/4 hover:basis-2/4 transition-all duration-300 object-cover overflow-hidden saturate-100 opacity-75 hover:opacity-100 contrast-125 hover:contrast-100 hover:saturate-100"
                  src="
                https://images.unsplash.com/photo-1637666505754-7416ebd70cbf?q=80&w=1935&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                  alt=""
                />
                <img
                  class="bg-blue-50 w-full h-[500px] border-none rounded-md flex basis-1/4 hover:basis-2/4 transition-all duration-300 object-cover overflow-hidden saturate-100 opacity-75 hover:opacity-100 contrast-125 hover:contrast-100 hover:saturate-100"
                  src="https://images.unsplash.com/photo-1634986666676-ec8fd927c23d?q=80&w=1935&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                  alt=""
                />
                <img
                  class="bg-blue-50 w-full h-[500px] border-none rounded-md flex basis-1/4 hover:basis-2/4 transition-all duration-300 object-cover overflow-hidden saturate-100 opacity-75 hover:opacity-100 contrast-125 hover:contrast-100 hover:saturate-100"
                  src="https://images.unsplash.com/photo-1678222453727-00e17c2e582e?q=80&w=1965&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                  alt=""
                />
              </div>
              <div class="w-full h-fit flex justify-start">
                <a href="" class="bg-white transition-all duration-300 group flex justify-center items-center gap-2 pl-1 pr-6 hover:pr-1 hover:pl-6 text-xl py-3 border-primary text-primary border-[1.5px] overflow-hidden rounded-full">
                  <span class="transition-all duration-300 invisible -translate-x-96 group-hover:visible group-hover:translate-x-0"
                    ><svg class="stroke-[1.5px]" width="17" height="15" viewBox="0 0 17 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M15 7.5L1 7.5" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path>
                      <path d="M9 14.5L16 7.5L9 0.499999" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path>
                    </svg></span
                  >
                  <p class="">See all</p>
                  <span class="transition-all duration-300 visible group-hover:translate-x-96 group-hover:invisible"
                    ><svg class="stroke-[1.5px]" width="17" height="15" viewBox="0 0 17 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M15 7.5L1 7.5" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path>
                      <path d="M9 14.5L16 7.5L9 0.499999" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"></path>
                    </svg></span
                  >
                </a>
              </div>
            </div>
          </div>
          <!-- <div id="bottom1 test">
            <a href="" class="underline text-4xl">test</a>
            <button class="border-2 p-10">test</button>
            <img src="https://sekolahdeveloperindonesia.com/_next/image?url=%2Froadmap.jpg&w=1200&q=75" alt="" />
          </div> -->
        </div>
      </section>

      <section id="stac" class="mt-28 pb-60 w-full h-96">
        <div class="mx-auto container max-w-7xl flex flex-col w-full h-96 gap-14">
          <div id="upper3">
            <h2 class="font-bold text-6xl text-primary py-2">Stacks</h2>
          </div>
          <div id="bottom3"></div>
        </div>
      </section>
    </div>

    <script>
      //
      function createKeyframes(name, keyframes) {
        const style = document.createElement("style");
        style.innerHTML = `
        @keyframes ${name} {
            ${Object.entries(keyframes)
              .map(
                ([percent, properties]) =>
                  `${percent} { ${Object.entries(properties)
                    .map(([prop, value]) => `${prop}: ${value}`)
                    .join("; ")} }`
              )
              .join(" ")}
        }
    `;
        document.head.appendChild(style);
      }

      // Define keyframes
      const keyframes = {
        "text-slide-2": {
          "0%, 40%": { transform: "translateY(0%)" },
          "50%, 90%": { transform: "translateY(-33.33%)" },
          "100%": { transform: "translateY(-66.66%)" },
        },
        "text-slide-3": {
          "0%, 26.66%": { transform: "translateY(0%)" },
          "33.33%, 60%": { transform: "translateY(-25%)" },
          "66.66%, 93.33%": { transform: "translateY(-50%)" },
          "100%": { transform: "translateY(-75%)" },
        },
        "text-slide-4": {
          "0%, 20%": { transform: "translateY(0%)" },
          "25%, 45%": { transform: "translateY(-20%)" },
          "50%, 70%": { transform: "translateY(-40%)" },
          "75%, 95%": { transform: "translateY(-60%)" },
          "100%": { transform: "translateY(-80%)" },
        },
        "text-slide-5": {
          "0%, 16%": { transform: "translateY(0%)" },
          "20%, 36%": { transform: "translateY(-16.66%)" },
          "40%, 56%": { transform: "translateY(-33.33%)" },
          "60%, 76%": { transform: "translateY(-50%)" },
          "80%, 96%": { transform: "translateY(-66.66%)" },
          "100%": { transform: "translateY(-83.33%)" },
        },
        "text-slide-6": {
          "0%, 13.33%": { transform: "translateY(0%)" },
          "16.66%, 30%": { transform: "translateY(-14.28%)" },
          "33.33%, 46.66%": { transform: "translateY(-28.57%)" },
          "50%, 63.33%": { transform: "translateY(-42.85%)" },
          "66.66%, 80%": { transform: "translateY(-57.14%)" },
          "83.33%, 96.66%": { transform: "translateY(-71.42%)" },
          "100%": { transform: "translateY(-85.71%)" },
        },
        "text-slide-7": {
          "0%, 11.43%": { transform: "translateY(0%)" },
          "14.28%, 25.71%": { transform: "translateY(-12.5%)" },
          "28.57%, 40%": { transform: "translateY(-25%)" },
          "42.85%, 54.28%": { transform: "translateY(-37.5%)" },
          "57.14%, 68.57%": { transform: "translateY(-50%)" },
          "71.42%, 82.85%": { transform: "translateY(-62.5%)" },
          "85.71%, 97.14%": { transform: "translateY(-75%)" },
          "100%": { transform: "translateY(-87.5%)" },
        },
        "text-slide-8": {
          "0%, 10%": { transform: "translateY(0%)" },
          "12.5%, 22.5%": { transform: "translateY(-11.11%)" },
          "25%, 35%": { transform: "translateY(-22.22%)" },
          "37.5%, 47.5%": { transform: "translateY(-33.33%)" },
          "50%, 60%": { transform: "translateY(-44.44%)" },
          "62.5%, 72.5%": { transform: "translateY(-55.55%)" },
          "75%, 85%": { transform: "translateY(-66.66%)" },
          "87.5%, 97.5%": { transform: "translateY(-77.77%)" },
          "100%": { transform: "translateY(-88.88%)" },
        },
      };

      // Create keyframes
      for (const [name, frames] of Object.entries(keyframes)) {
        createKeyframes(name, frames);
      }

      function applyAnimation(element, name, duration, timingFunction, iterationCount) {
        element.style.animation = `${name} ${duration} ${timingFunction} ${iterationCount}`;
      }

      // Example usage:
      // Apply 'text-slide-2' animation to an element with id 'animated-text'
      const element = document.getElementById("animated-text");
      applyAnimation(element, "text-slide-2", "5s", "cubic-bezier(0.83, 0, 0.17, 1)", "infinite");

      //
    </script>
    <script>
      document.addEventListener("scroll", () => {
        // get all the span (word)
        const spans = document.querySelectorAll("#reveal span");
        // get the current position (so if you're at the top of the page, this will return 0)
        const scrollPosition = document.documentElement.scrollTop;

        spans.forEach((span, index) => {
          // NOTE: one-liner (replaces line 257-265), commented it because it's harder to read, i'll leave it here if you need it
          // span.style.opacity = (scrollPosition > index * 100 ? 1 : 0.1);

          // "threshold"
          const treshold = index * 100;
          // so the first word will appear if the scrollPosition is > 0,
          // the second word will appear if the scrollPosition is > 100
          // so the higher the treshold, will make the word appear "slower" / need a bunch of scroll to reveal one word
          if (scrollPosition > treshold) {
            span.setAttribute("style", "opacity: 1;");
          } else {
            span.setAttribute("style", "opacity: 0.1;");
          }
        });
      });
    </script>
    <script>
      document.getElementById("hamburger").addEventListener("click", function () {
        const lines = this.querySelectorAll(".line");
        lines.forEach((line) => line.classList.toggle("transform-active"));
      });
    </script>
    <script>
      const elements = document.querySelectorAll("*:not(nav)");

      const checkElementsInView = () => {
        elements.forEach((element) => {
          const rect = element.getBoundingClientRect();
          if (rect.top <= window.innerHeight && rect.bottom >= 0) {
            element.classList.add("animate");
          } else {
            element.classList.remove("animate");
          }
        });
      };

      // Run the function initially to check elements on page load
      checkElementsInView();

      // Add event listener for scroll
      window.addEventListener("scroll", checkElementsInView);
    </script>
  </div>
</Layout>
